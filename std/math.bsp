[FUNC FLOOR [PARAM val FLOAT] [RETURNS INT]
  [RETURN [INT [MATH [VAR val] - [MATH [VAR val] % 1]]]] # val % 1 is the decimal part, subtracts it from the value to get the floor
]

[FUNC CEIL [PARAM val FLOAT] [RETURNS INT]
  [RETURN [INT [MATH [VAR val] + [MATH 1 - [MATH [VAR val] % 1]]]]] # works similar to FLOOR
]

[FUNC ROUND [PARAM val FLOAT] [RETURNS INT]
  [IF [COMPARE [VAR val] >= 0.0]
    [RETURN [FLOOR [MATH [VAR val] + 0.5]]]
  ]
  [RETURN [CEIL [MATH [VAR val] - 0.5]]]
]

[DEFINE seed [MATH [TIME NANO] % 2147483647]]

# This uses the glibc random values, see https://en.wikipedia.org/wiki/Linear_congruential_generator

[FUNC RANDINT [PARAM lower INT] [PARAM upper INT] [RETURNS INT]
  [DEFINE seed [MATH [MATH [MATH 1103515245 * [VAR seed]] + 12345] % 2147483647]] # Glibc rand algorithm
  [RETURN [MATH [MATH [VAR seed] % [MATH [VAR upper] - [VAR lower]]] + [VAR lower]]]
]

[FUNC RANDOM [PARAM lower FLOAT] [PARAM upper FLOAT] [RETURNS FLOAT]
  [DEFINE seed [MATH [MATH [MATH 1103515245 * [VAR seed]] + 12345] % 2147483647]] # Glibc rand algorithm
  # Get val from 0..1
  [DEFINE val [MATH [FLOAT [VAR seed]] / 2147483647.0]]
  [RETURN [MATH [VAR lower] + [MATH [VAR val] * [MATH [VAR upper] - [VAR lower]]]]]
]
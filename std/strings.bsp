[FUNC JOIN [PARAM vals ARRAY{STRING}] [PARAM joiner STRING] [RETURNS STRING]
  [DEFINE out ""]
  [DEFINE i 0]
  [WHILE [COMPARE [VAR i] < [LENGTH [VAR vals]]]
    [DEFINE out [CONCAT [VAR out] [INDEX [VAR vals] [VAR i]]]]
    [IF [COMPARE [VAR i] != [MATH [LENGTH [VAR vals]] - 1]]
      [DEFINE out [CONCAT [VAR out] [VAR joiner]]]
    ]
    [DEFINE i [MATH [VAR i] + 1]]
  ]
  [RETURN [VAR out]]
]

[FUNC SPLIT [PARAM str STRING] [PARAM sep STRING] [RETURNS ARRAY{STRING}]
  [DEFINE i 0]
  [DEFINE curr ""]
  [DEFINE out [MAKE ARRAY{STRING}]]
  [WHILE [COMPARE [LENGTH [VAR sep]] <= [MATH [LENGTH [VAR str]] - [VAR i]]] # Loop until sep is not possible
    # Check if the next characters are the seperator
    [DEFINE j 0]
    [DEFINE issep TRUE]
    [WHILE [AND [COMPARE [VAR j] < [LENGTH [VAR sep]]] [VAR issep]]
      [IF [COMPARE [INDEX [VAR str] [MATH [VAR i] + [VAR j]]] != [INDEX [VAR sep] [VAR j]]]
        [DEFINE issep FALSE]
      ]
      [DEFINE j [MATH [VAR j] + 1]]
    ]
    [IF [VAR issep]
      # It is sep, skip it and add curr to out
      [DEFINE i [MATH [VAR i] + [LENGTH [VAR sep]]]]
      [APPEND [VAR out] [VAR curr]]
      [DEFINE curr ""]
    ]
    # Add curr char if not out of bounds
    [IF [COMPARE [VAR i] < [LENGTH [VAR str]]]
      [DEFINE curr [CONCAT [VAR curr] [INDEX [VAR str] [VAR i]]]]
    ]
    [DEFINE i [MATH [VAR i] + 1]]
  ]

  # Add remaining characters
  [WHILE [COMPARE [VAR i] < [LENGTH [VAR str]]]
    [DEFINE curr [CONCAT [VAR curr] [INDEX [VAR str] [VAR i]]]]
    [DEFINE i [MATH [VAR i] + 1]]
  ]
  [IF [COMPARE [VAR curr] != ""]
    [APPEND [VAR out] [VAR curr]]
  ]
  [RETURN [VAR out]]
]
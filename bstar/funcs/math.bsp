[IMPORT "bstar/interp.bsp"]
[IMPORT "bstar/funcs/funcs.bsp"]
[IMPORT "math.bsp"]

[FUNC node_choose [PARAM self node] [PARAM args ARRAY{node}] [RETURNS ANY]
  [DEFINE arr [VAR args]]
  [IF [CANCAST [GET [INDEX [VAR args] 0] val] ARRAY{node}]
    [DEFINE arr [CAST [GET [INDEX [VAR args] 0] val] ARRAY{node}]]
  ]
  [DEFINE ind [RANDINT 0 [LENGTH [VAR arr]]]]
  [RETURN [ANY [INDEX [VAR arr] [VAR ind]]]]
]

[ADD_BLD "CHOOSE" [FN node_choose]]

[FUNC node_choosechar [PARAM self node] [PARAM args ARRAY{node}] [RETURNS ANY]
  [DEFINE str [CAST [GET [INDEX [VAR args] 0] val] STRING]]
  [DEFINE ind [RANDINT 0 [LENGTH [VAR str]]]]

  [DEFINE out [MAKE node]]
  [SET [VAR out] kind [CONST nodeKindString]]
  [SET [VAR out] val [ANY [STRING [INDEX [VAR str] [VAR ind]]]]]
  [RETURN [ANY [VAR out]]]
]

[ADD_BLD "CHOOSECHAR" [FN node_choosechar]]

[FUNC node_randint [PARAM self node] [PARAM args ARRAY{node}] [RETURNS ANY]
  [DEFINE lower [CAST [GET [INDEX [VAR args] 0] val] INT]]
  [DEFINE upper [CAST [GET [INDEX [VAR args] 1] val] INT]]
  [DEFINE val [RANDINT [VAR lower] [VAR upper]]]

  [DEFINE out [MAKE node]]
  [SET [VAR out] kind [CONST nodeKindInt]]
  [SET [VAR out] val [ANY [VAR val]]]
  [RETURN [ANY [VAR out]]]
]

[ADD_BLD "RANDINT" [FN node_randint]]

[FUNC node_random [PARAM self node] [PARAM args ARRAY{node}] [RETURNS ANY]
  [DEFINE lower [FLOAT 0]]
  [IF [COMPARE [GET [INDEX [VAR args] 0] kind] == [CONST nodeKindInt]]
    [DEFINE lower [FLOAT [CAST [GET [INDEX [VAR args] 0] val] INT]]]
  ELSE
    [DEFINE lower [CAST [GET [INDEX [VAR args] 0] val] FLOAT]]
  ]
  [DEFINE upper [FLOAT 0]]
  [IF [COMPARE [GET [INDEX [VAR args] 1] kind] == [CONST nodeKindInt]]
    [DEFINE upper [FLOAT [CAST [GET [INDEX [VAR args] 1] val] INT]]]
  ELSE
    [DEFINE upper [CAST [GET [INDEX [VAR args] 1] val] FLOAT]]
  ]
  [DEFINE val [RANDOM [VAR lower] [VAR upper]]]

  [DEFINE out [MAKE node]]
  [SET [VAR out] kind [CONST nodeKindFloat]]
  [SET [VAR out] val [ANY [VAR val]]]
  [RETURN [ANY [VAR out]]]
]

[ADD_BLD "RANDOM" [FN node_random]]

[FUNC node_floor [PARAM self node] [PARAM args ARRAY{node}] [RETURNS ANY]
  [DEFINE val [CAST [GET [INDEX [VAR args] 0] val] FLOAT]]

  [DEFINE node [MAKE node]]
  [SET [VAR node] kind [CONST nodeKindInt]]
  [SET [VAR node] val [ANY [FLOOR [VAR val]]]]
  [RETURN [ANY [VAR node]]]
]

[ADD_BLD "FLOOR" [FN node_floor]]
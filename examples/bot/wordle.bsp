[IMPORT "math.bsp"]
[IMPORT "strings.bsp"]

# Get allowed words
[DEFINE start [TIME MILLI]]
[DEFINE vals [DB GET "allowed"]]
[DEFINE allowed [MAKE MAP{STRING,BOOL}]]
[DEFINE i 0]
[WHILE [COMPARE [VAR i] < [MATH [LENGTH [VAR vals]] / 6]]
  [SET [VAR allowed] [SLICE [VAR vals] [MATH [VAR i] * 6] [MATH [MATH [VAR i] * 6] + 5]] TRUE]
  [DEFINE i [MATH [VAR i] + 1]]
]
[DEFINE vals [DB GET "possible"]]
[DEFINE i 0]
[WHILE [COMPARE [VAR i] < [MATH [LENGTH [VAR vals]] / 6]]
  [SET [VAR allowed] [SLICE [VAR vals] [MATH [VAR i] * 6] [MATH [MATH [VAR i] * 6] + 5]] TRUE]
  [DEFINE i [MATH [VAR i] + 1]]
]

# Colors
[DEFINE C "[0m"] # Reset
[DEFINE Y "[33m"] # Yellow
[DEFINE G "[32m"] # Green

# Setup vars
[DEFINE possible [DB GET "possible"]]
[DEFINE ind [RANDINT 0 [MATH [MATH [LENGTH [VAR possible]] / 6] - 1]]]
[DEFINE currword [SLICE [VAR possible] [MATH [VAR ind] * 6] [MATH [MATH [VAR ind] * 6] + 5]]]
[DEFINE guesses [MAKE ARRAY{STRING}]]

[PRINT [CONCAT "Loaded in " [STRING [MATH [TIME MILLI] - [VAR start]]] "ms."]]

# Guess
[DEFINE running TRUE]
[DEFINE started FALSE]
[FUNC DOGUESS
  [IF [NOT [VAR started]]
    [PRINT "===== Guesses =====```\n```ansi"]
    [DEFINE started TRUE]
  ]

  [DEFINE guess [INPUT "Guess a word"]]

  [IF [NOT [EXISTS [VAR allowed] [VAR guess]]]
    [RETURN [PRINT "That's not a word!"]]
  ]

  # Save guess
  [APPEND [VAR guesses] [VAR guess]]

  # Print guesses
  [DEFINE line ""]
  [DEFINE j 0]
  [WHILE [COMPARE [VAR j] < [LENGTH [VAR guess]]]
    [DEFINE char [INDEX [VAR guess] [VAR j]]]
    [DEFINE color [VAR C]]
    # Check if char in currword, if so make it yellow
    [DEFINE k 0]
    [WHILE [COMPARE [VAR k] < [LENGTH [VAR currword]]]
      [IF [COMPARE [INDEX [VAR currword] [VAR k]] == [VAR char]]
        [DEFINE color [VAR Y]]
      ]
      [DEFINE k [MATH [VAR k] + 1]]
    ]
    # Check if char is correct
    [IF [COMPARE [INDEX [VAR currword] [VAR j]] == [VAR char]]
      [DEFINE color [VAR G]]
    ]

    # Make line
    [DEFINE line [CONCAT [VAR line] [VAR color] "[" [VAR char] "]"]]

    [DEFINE j [MATH [VAR j] + 1]]
  ]
  [PRINT [VAR line]]

  # Check if won
  [DEFINE guess [INDEX [VAR guesses] [MATH [LENGTH [VAR guesses]] - 1]]]
  [IF [COMPARE [VAR guess] == [VAR currword]]
    [DEFINE running FALSE]
    [RETURN [PRINT "```\n```You got the word!"]]
  ]

  # If done, then reset
  [IF [COMPARE [LENGTH [VAR guesses]] == 6]
    [DEFINE running FALSE]
    [RETURN [PRINT "```\n```Maybe you'll get it next time?"]]
  ]

  # Wait for input, then continue
]

[WHILE [VAR running]
  [BUTTONS [ARRAY [ARRAY [COLOR [BUTTON "Continue" "cont"] 4]]]]
  [DOGUESS]
]

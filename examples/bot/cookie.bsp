# String manipulation code
[FUNC JOIN [PARAM vals STRING{}] [PARAM joiner STRING] [RETURNS STRING]
  [DEFINE out ""]
  [DEFINE i 0]
  [WHILE [COMPARE [VAR i] < [LENGTH [VAR vals]]]
    [DEFINE out [CONCAT [VAR out] [INDEX [VAR vals] [VAR i]]]]
    [IF [COMPARE [VAR i] != [MATH [LENGTH [VAR vals]] - 1]]
      [DEFINE out [CONCAT [VAR out] [VAR joiner]]]
    ]
    [DEFINE i [MATH [VAR i] + 1]]
  ]
  [RETURN [VAR out]]
]

[FUNC SPLIT [PARAM val STRING] [PARAM joiner STRING] [RETURNS STRING{}]
  [DEFINE out [MAKE STRING{}]]
  [DEFINE i 0]
  [DEFINE curr ""]
  [WHILE [COMPARE [VAR i] < [LENGTH [VAR val]]]
    [IF [COMPARE [INDEX [VAR val] [VAR i]] == [VAR joiner]]
      [APPEND [VAR out] [VAR curr]]
      [DEFINE curr ""]
    ELSE
      [DEFINE curr [CONCAT [VAR curr] [INDEX [VAR val] [VAR i]]]]
    ]
    [DEFINE i [MATH [VAR i] + 1]]
  ]
  [APPEND [VAR out] [VAR curr]]
  [RETURN [VAR out]]
]

[FUNC FORMATINT [PARAM a FLOAT] [RETURNS STRING]
  [IF [COMPARE [VAR a] < [FLOAT 1000]]
    [RETURN [STRING [VAR a]]]
  ]
  [IF [AND [COMPARE [VAR a] > [FLOAT 1000]] [COMPARE [VAR a] < [FLOAT 1000000]]]
    [RETURN [CONCAT [STRING [MATH [VAR a] / 1000]] "k"]]
  ]
  [IF [AND [COMPARE [VAR a] > [FLOAT 1000000]] [COMPARE [VAR a] < [FLOAT 1000000000]]]
    [RETURN [CONCAT [STRING [MATH [VAR a] / 1000000]] "m"]]
  ]
  [RETURN [STRING [VAR a]]]
]

# Upgrades
[DEFINE upgrades [MAKE MAP{STRING}INT]] # MAP{Name}Price (price ^ (quantity + 1) is cost), (quantity ^ price is CPS benefit) 
[DEFINE icons [MAKE MAP{STRING}STRING]] # MAP{Name}Icon
[SET [VAR upgrades] "Clicker" 2]
[SET [VAR icons] "Clicker" "🖱️"]
[SET [VAR upgrades] "Granny" 5]
[SET [VAR icons] "Granny" "👵"]
[SET [VAR upgrades] "Miner" 10]
[SET [VAR icons] "Miner" "⛏️"]
[SET [VAR upgrades] "Factory" 25]
[SET [VAR icons] "Factory" "🏭"]
[SET [VAR upgrades] "Wizard" 50]
[SET [VAR icons] "Wizard" "🧙‍♂️"]

# Calc quantities
[DEFINE data ""]
[IF [COMPARE [DB EXISTS [USERID]] == "true"]
  [DEFINE data [DB GET [USERID]]]
]
[DEFINE inv [SPLIT [VAR data] "|"]]
[IF [COMPARE [LENGTH [VAR inv]] == 0] # Start out with a clicker
  [DEFINE inv [ARRAY "Clicker"]]
  [DB SET [USERID] [JOIN [VAR inv] "|"]]
]

[DEFINE counts [MAKE MAP{STRING}INT]]
[DEFINE i 0]
[WHILE [COMPARE [VAR i] < [LENGTH [VAR inv]]]
  # Increment by one for every item
  [DEFINE item [INDEX [VAR inv] [VAR i]]]
  [DEFINE v 0]
  [IF [EXISTS [VAR counts] [VAR item]]
    [DEFINE v [GET [VAR counts] [VAR item]]]
  ]
  [SET [VAR counts] [VAR item] [MATH [VAR v] + 1]]

  [DEFINE i [MATH [VAR i] + 1]]
]

# Calc CPS
[DEFINE cps 0]
[DEFINE i 0]
[DEFINE keys [KEYS [VAR counts]]]
[WHILE [COMPARE [VAR i] < [LENGTH [VAR keys]]]
  [DEFINE item [INDEX [VAR keys] [VAR i]]]
  [DEFINE price [GET [VAR upgrades] [VAR item]]]
  [DEFINE quantity [GET [VAR counts] [VAR item]]]
  [DEFINE benefit [MATH [VAR quantity] ^ [VAR price]]]
  [DEFINE cps [MATH [VAR cps] + [FLOOR [MATH [FLOAT [VAR benefit]] / 60]]]]
  [DEFINE i [MATH [VAR i] + 1]]
]

# Calc money made
[DEFINE money [FLOAT 0]]
[IF [COMPARE [DB EXISTS [CONCAT "money_" [USERID]]] == "true"]
  [DEFINE money [FLOAT [DB GET [CONCAT "money_" [USERID]]]]]
]
[IF [COMPARE [DB EXISTS [CONCAT "lastsaved_" [USERID]]] == "true"]
  [DEFINE lastsaved [INT [DB GET [CONCAT "lastsaved_" [USERID]]]]]
  [DEFINE currtime [TIME]]
  [DB SET [CONCAT "lastsaved_" [USERID]] [STRING [VAR currtime]]]

  [DEFINE made [MATH [VAR cps] * [MATH [VAR currtime] - [VAR lastsaved]]]]
  [DEFINE money [MATH [VAR money] + [VAR made]]]
  [DB SET [CONCAT "money_" [USERID]] [STRING [VAR money]]]
]

# Print output
[PRINT "==Cookie Clicker==\n```"]
[PRINT [CONCAT "**Money**: " [STRING [VAR money]]]]
[PRINT [CONCAT "**CPS**: " [STRING [VAR cps]]]]

# Print inv
[DEFINE keys [KEYS [VAR upgrades]]]
[DEFINE i 0]
[WHILE [COMPARE [VAR i] < [LENGTH [VAR keys]]]
  [DEFINE item [INDEX [VAR keys] [VAR i]]]
  [DEFINE price [GET [VAR upgrades] [VAR item]]]
  [DEFINE count [GET [VAR counts] [VAR item]]]
  [DEFINE [VAR price] [MATH [VAR price] ^ [MATH [VAR count]] + 1]]
  [DEFINE canbuy "🚫"]
  [IF [COMPARE [VAR money] > [VAR price]]
    [DEFINE canbuy "✅"]
  ]
  [PRINT [CONCAT [VAR canbuy] "**" [VAR item] "** - " [FORMATINT [VAR price]] " (" [STRING [VAR count]] ")"]]

  [DEFINE i [MATH [VAR i] + 1]]
]

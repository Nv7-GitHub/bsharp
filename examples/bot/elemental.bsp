[IMPORT "strings.bsp"]

[TYPEDEF element STRUCT{name: STRING, id: INT, creator: STRING, createdon: INT}]

[FUNC encode_element [PARAM elem element] [RETURNS STRING]
  [RETURN [CONCAT [STRING [GET [VAR elem] id]] "_" [GET [VAR elem] name] "_" [GET [VAR elem] creator] "_" [STRING [GET [VAR elem] createdon]]]]
]

[FUNC decode_element [PARAM elem STRING] [RETURNS element]
  [DEFINE out [MAKE element]]
  [DEFINE parts [SPLIT [VAR elem] "_"]]
  [SET [VAR out] id [INT [INDEX [VAR parts] 0]]]
  [SET [VAR out] name [INDEX [VAR parts] 1]]
  [SET [VAR out] creator [INDEX [VAR parts] 2]]
  [SET [VAR out] createdon [INT [INDEX [VAR parts] 3]]]
  [RETURN [VAR out]]
]

# Set up DB
[IF [COMPARE [DB EXISTS "elements"] == "false"]
  [DB SET "elements" "1_Air_567132457820749842_0|2_Earth_567132457820749842_0|3_Fire_567132457820749842_0|4_Water_567132457820749842_0|5_Wind_567132457820749842_1658117951"]
  [DB SET "combos" "1+1+5"]
]
[IF [COMPARE [DB EXISTS [USERID]] == "false"]
  [DB SET [USERID] "1|2|3|4"]
]

# Parse elements
[DEFINE elem_raw [SPLIT [DB GET "elements"] "|"]]
[DEFINE elements [MAKE ARRAY{element}]]
[DEFINE name_map [MAKE MAP{STRING,INT}]]
[DEFINE i 0]
[WHILE [COMPARE [VAR i] < [LENGTH [VAR elem_raw]]]
  [DEFINE el [decode_element [INDEX [VAR elem_raw] [VAR i]]]]
  [APPEND [VAR elements] [VAR el]]
  [SET [VAR name_map] [TOLOWER [GET [VAR el] name]] [GET [VAR el] id]]
  [DEFINE i [MATH [VAR i] + 1]]
]

# Input
[PRINT "What do you want to do?```"]
[DEFINE mode [BUTTONS [ARRAY [ARRAY
  [BUTTON "Combine Elements" "combo"]
  [BUTTON "View Inventory" "inv"]
  [BUTTON "Suggest" "suggest"]
  [BUTTON "Element Info" "info"]
]]]]

# Parse combos
[DEFINE combos [MAKE ARRAY{ARRAY{INT}}]]
[DEFINE combos_raw [SPLIT [DB GET "combos"] "|"]]
[DEFINE i 0]
[WHILE [COMPARE [VAR i] < [LENGTH [VAR combos_raw]]]
  [DEFINE parts [SPLIT [INDEX [VAR combos_raw] [VAR i]] "+"]]
  [APPEND [VAR combos] [ARRAY [INT [INDEX [VAR parts] 0]] [INT [INDEX [VAR parts] 1]] [INT [INDEX [VAR parts] 2]]]]
  [DEFINE i [MATH [VAR i] + 1]]
]

# Parse inv
[DEFINE inv_raw [SPLIT [DB GET [USERID]] "|"]]
[DEFINE i 0]
[DEFINE inv [MAKE ARRAY{INT}]]
[WHILE [COMPARE [VAR i] < [LENGTH [VAR inv_raw]]]
  [APPEND [VAR inv] [INT [INDEX [VAR inv_raw] [VAR i]]]]
  [DEFINE i [MATH [VAR i] + 1]]
]

[FUNC has_elem [PARAM elem INT] [RETURNS BOOL]
  [DEFINE i 0]
  [WHILE [COMPARE [VAR i] < [LENGTH [VAR inv]]]
    [IF [COMPARE [INDEX [VAR inv] [VAR i]] == [VAR elem]]
      [RETURN TRUE]
    ]
    [DEFINE i [MATH [VAR i] + 1]]
  ]
  [RETURN FALSE]
]

[FUNC COMBO
  # Get IDs
  [DEFINE first [TOLOWER [INPUT "First element?"]]]
  [IF [NOT [EXISTS [VAR name_map] [VAR first]]]
    [PRINT [CONCAT "Element **" [VAR first] "** doesn't exist!"]]
    [RETURN NULL]
  ]
  [DEFINE firstid [GET [VAR name_map] [VAR first]]]
  [IF [NOT [has_elem [VAR firstid]]]
    [PRINT [CONCAT "You don't have **" [GET [INDEX [VAR elements] [MATH [VAR firstid] - 1]] name] "**"]]
  ]

  [DEFINE second [TOLOWER [INPUT "Second element?"]]]
  [IF [NOT [EXISTS [VAR name_map] [VAR second]]]
    [PRINT [CONCAT "Element **" [VAR second] "** doesn't exist!"]]
    [RETURN NULL]
  ]
  [DEFINE secondid [GET [VAR name_map] [VAR second]]]
  [IF [NOT [has_elem [VAR secondid]]]
    [PRINT [CONCAT "You don't have **" [GET [INDEX [VAR elements] [MATH [VAR secondid] - 1]] name] "**"]]
  ]

  # Search
  [DEFINE i 0]
  [DEFINE result -1]
  [WHILE [AND [COMPARE [VAR i] < [LENGTH [VAR combos]]] [COMPARE [VAR result] == -1]]
    [DEFINE comb [INDEX [VAR combos] [VAR i]]]
    [DEFINE first [INDEX [VAR comb] 0]]
    [DEFINE second [INDEX [VAR comb] 1]]
    [IF [OR [AND [COMPARE [VAR first] == [VAR firstid]] [COMPARE [VAR second] == [VAR secondid]]] [AND [COMPARE [VAR first] == [VAR secondid]] [COMPARE [VAR second] == [VAR firstid]]]]
      [DEFINE result [INDEX [VAR comb] 2]]
    ]
    [DEFINE i [MATH [VAR i] + 1]]
  ]

  # Check if combo exists
  [IF [COMPARE [VAR result] == -1]
    [PRINT "No combo exists! Suggest one!"]
    [RETURN NULL]
  ]

  # Add to inv
  [DEFINE new ""]
  [IF [has_elem [VAR result]]
    [DEFINE new ", but you already had it"]
  ELSE
    [DB SET [USERID] [CONCAT [DB GET [USERID]] "|" [STRING [VAR result]]]]
  ]
  [PRINT [CONCAT "You made **" [GET [INDEX [VAR elements] [MATH [VAR result] - 1]] name] "**" [VAR new] "!"]]
]

[CONSTDEF PAGE_LENGTH 10]

[FUNC INV
  [DEFINE running TRUE]
  [DEFINE page 0]
  [WHILE [VAR running]
    [DEFINE txt ""]
    [DEFINE i [MATH [VAR page] * [CONST PAGE_LENGTH]]]
    [WHILE [AND [COMPARE [VAR i] < [MATH [MATH [VAR page] + 1] * [CONST PAGE_LENGTH]]] [COMPARE [VAR i] < [LENGTH [VAR inv]]]]
      [DEFINE el [INDEX [VAR elements] [MATH [INDEX [VAR inv] [VAR i]] - 1]]]
      [DEFINE txt [CONCAT [VAR txt] [GET [VAR el] name] "\n"]]
      [DEFINE i [MATH [VAR i] + 1]]
    ]

    [PRINT "**Inventory:**"]
    [PRINT [VAR txt]]

    [DEFINE btns [ARRAY [COLOR [BUTTON "Stop" "stop"] 3]]]
    [IF [COMPARE [VAR page] > 0]
      [APPEND [VAR btns] [BUTTON "Previous" "prev"]]
    ELSE
      [APPEND [VAR btns] [DISABLE [BUTTON "Previous" "prev"]]]
    ]
    [IF [COMPARE [VAR page] < [MATH [LENGTH [VAR inv]] / [CONST PAGE_LENGTH]]]
      [APPEND [VAR btns] [BUTTON "Next" "next"]]
    ELSE
      [APPEND [VAR btns] [DISABLE [BUTTON "Next" "next"]]]
    ]

    [DEFINE res [BUTTONS [ARRAY [VAR btns]]]]
    [SWITCH [VAR res]
      [CASE "stop" [DEFINE running FALSE]]
      [CASE "prev" [DEFINE page [MATH [VAR page] - 1]]]
      [CASE "next" [DEFINE page [MATH [VAR page] + 1]]]
    ]
  ]
]

[FUNC SUGGEST
  # Get IDs (copied from COMBO)
  [DEFINE first [TOLOWER [INPUT "First element?"]]]
  [IF [NOT [EXISTS [VAR name_map] [VAR first]]]
    [PRINT [CONCAT "Element **" [VAR first] "** doesn't exist!"]]
    [RETURN NULL]
  ]
  [DEFINE firstid [GET [VAR name_map] [VAR first]]]
  [IF [NOT [has_elem [VAR firstid]]]
    [PRINT [CONCAT "You don't have **" [GET [INDEX [VAR elements] [MATH [VAR firstid] - 1]] name] "**"]]
  ]

  [DEFINE second [TOLOWER [INPUT "Second element?"]]]
  [IF [NOT [EXISTS [VAR name_map] [VAR second]]]
    [PRINT [CONCAT "Element **" [VAR second] "** doesn't exist!"]]
    [RETURN NULL]
  ]
  [DEFINE secondid [GET [VAR name_map] [VAR second]]]
  [IF [NOT [has_elem [VAR secondid]]]
    [PRINT [CONCAT "You don't have **" [GET [INDEX [VAR elements] [MATH [VAR secondid] - 1]] name] "**"]]
  ]

  # Check if combo exists
  [DEFINE i 0]
  [DEFINE result -1]
  [WHILE [AND [COMPARE [VAR i] < [LENGTH [VAR combos]]] [COMPARE [VAR result] == -1]]
    [DEFINE comb [INDEX [VAR combos] [VAR i]]]
    [DEFINE first [INDEX [VAR comb] 0]]
    [DEFINE second [INDEX [VAR comb] 1]]
    [IF [OR [AND [COMPARE [VAR first] == [VAR firstid]] [COMPARE [VAR second] == [VAR secondid]]] [AND [COMPARE [VAR first] == [VAR secondid]] [COMPARE [VAR second] == [VAR firstid]]]]
      [DEFINE result [INDEX [VAR comb] 2]]
    ]
    [DEFINE i [MATH [VAR i] + 1]]
  ]
  [IF [COMPARE [VAR result] != -1]
    [PRINT "That combo already exists!"]
    [RETURN NULL]
  ]

  # Get new elem name
  [DEFINE name [INPUT "New Element Name"]]
  [DEFINE elem [MAKE element]]

  # Check if exists
  [IF [NOT [EXISTS [VAR name_map] [TOLOWER [VAR name]]]]
    # Build elem
    [DEFINE elem [MAKE element]]
    [SET [VAR elem] name [VAR name]]
    [SET [VAR elem] id [MATH [LENGTH [VAR elements]] + 1]]
    [SET [VAR elem] creator [USERID]]
    [SET [VAR elem] createdon [TIME]]

    # Save
    [DB SET "elements" [CONCAT [DB GET "elements"] "|" [encode_element [VAR elem]]]]
  ELSE
    [DEFINE elem [INDEX [VAR elements] [MATH [GET [VAR name_map] [TOLOWER [VAR name]]] - 1]]]
  ]

  # Save
  [DB SET "combos" [CONCAT [DB GET "combos"] "|" [STRING [VAR firstid]] "+" [STRING [VAR secondid]] "+" [STRING [GET [VAR elem] id]]]]

  [IF [NOT [has_elem [GET [VAR elem] id]]]
    [DB SET [USERID] [CONCAT [DB GET [USERID]] "|" [STRING [GET [VAR elem] id]]]] # Add to inv
  ]

  # Done!
  [PRINT [CONCAT "Created **" [GET [VAR elem] name] "**!"]]
]

[FUNC INFO
  [DEFINE name [TOLOWER [INPUT "Element Name"]]]
  [IF [NOT [EXISTS [VAR name_map] [VAR name]]]
    [PRINT [CONCAT "Element **" [VAR name] "** doesn't exist!"]]
    [RETURN NULL]
  ]
  [DEFINE el [INDEX [VAR elements] [MATH [GET [VAR name_map] [VAR name]] - 1]]]
  [PRINT [CONCAT "**" [GET [VAR el] name] " Info**"]]
  [PRINT [CONCAT "Element **#" [STRING [GET [VAR el] id]] "**"]]
  [PRINT [CONCAT "Creator: <@" [GET [VAR el] creator] ">"]]
  [PRINT [CONCAT "Created On: <t:" [STRING [GET [VAR el] createdon]] ">"]]
  [IF [has_elem [GET [VAR el] id]]
    [PRINT "**You have this.**"]
  ELSE
    [PRINT "**You don't have this.**"]
  ]
]

[SWITCH [VAR mode]
  [CASE "combo"
    [COMBO]
  ]

  [CASE "inv"
    [INV]
  ]

  [CASE "suggest"
    [SUGGEST]
  ]

  [CASE "info"
    [INFO]
  ]
]

[PRINT "```Finished!"]